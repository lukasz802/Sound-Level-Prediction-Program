<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SoundLevelCalculator.Pages"
      xmlns:c="clr-namespace:SoundLevelCalculator.Controls"
      xmlns:v="clr-namespace:SoundLevelCalculator.Converters"
      xmlns:dv="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
      xmlns:h="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
      xmlns:Primitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"
      x:Class="SoundLevelCalculator.Pages.DuctPage"
      mc:Ignorable="d" SnapsToDevicePixels="True"
      FontFamily="/Fonts/RobotoCondensed-Light.ttf #Roboto Light"
      d:DesignHeight="450" d:DesignWidth="850"
      Title="DuctPage">
    <Page.Resources>
        <v:ToMilimetersConverter x:Key="UnitConverter"/>
        <v:IntToFrequencyConverter x:Key="IntToFrequencyConverter"/>
        <Style x:Key="OptionComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid SnapsToDevicePixels="True">
                            <ToggleButton x:Name="ToggleButton"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="Border" BorderThickness="0" Background="#FFEAEAEA"
                                                CornerRadius="2">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="24"/>
                                                </Grid.ColumnDefinitions>
                                                <Viewbox Grid.Column="1" Margin="8,0,8,4">
                                                    <Path Stroke="Black" StrokeThickness="1" 
                                                          StrokeLineJoin="Round" Data="M5,3L2.5,6L0,3"
                                                          VerticalAlignment="Center"/>
                                                </Viewbox>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Border" Value="#FFDFDFDF"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" TargetName="Border" Value="#FFDFDFDF"/>
                                            </Trigger>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FF2686DD"
                                                                         Opacity="0.5"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderThickness" Value="1.5"/>
                                                <Setter Property="Margin" Value="-1.0"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="10,3,20,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <Popup x:Name="Popup"
                                   SnapsToDevicePixels="True"
                                   Placement="Bottom"
                                   VerticalOffset="-32"
                                   HorizontalOffset="0"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Grid x:Name="DropDown"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="White"
                                            BorderThickness="0.5"
                                            BorderBrush="{StaticResource MenuBorderColorBrush}"/>
                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Border" SnapsToDevicePixels="True">
                            <ContentPresenter VerticalAlignment="Center"
                                              Margin="10,0,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF3EA2D4"
                                                         Opacity="0.25"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DimensionButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Stretch"
                                              HorizontalAlignment="Stretch"
                                              Content="{TemplateBinding Content}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MenuBorderColorBrush}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" Value="True">
                    <Setter Property="BorderBrush" Value="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AcousticDataChartStyle" TargetType="{x:Type h:Chart}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Palette">
                <Setter.Value>
                    <dv:ResourceDictionaryCollection>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFB9D6F7"/>
                                <GradientStop Color="OrangeRed" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB9D6F7"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB9D6F7"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB9D6F7"/>
                                            <GradientStop Color="OrangeRed" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFFBB7B5"/>
                                <GradientStop Color="#FF702828" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFBB7B5"/>
                                            <GradientStop Color="#FF702828" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFBB7B5"/>
                                            <GradientStop Color="#FF702828" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFBB7B5"/>
                                            <GradientStop Color="#FF702828" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFB8C0AC"/>
                                <GradientStop Color="#FF5F7143" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB8C0AC"/>
                                            <GradientStop Color="#FF5F7143" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB8C0AC"/>
                                            <GradientStop Color="#FF5F7143" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB8C0AC"/>
                                            <GradientStop Color="#FF5F7143" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFFDE79C"/>
                                <GradientStop Color="#FFF6BC0C" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFDE79C"/>
                                            <GradientStop Color="#FFF6BC0C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFDE79C"/>
                                            <GradientStop Color="#FFF6BC0C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFFDE79C"/>
                                            <GradientStop Color="#FFF6BC0C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFA9A3BD"/>
                                <GradientStop Color="#FF382C6C" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFA9A3BD"/>
                                            <GradientStop Color="#FF382C6C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFA9A3BD"/>
                                            <GradientStop Color="#FF382C6C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFA9A3BD"/>
                                            <GradientStop Color="#FF382C6C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFB1A1B1"/>
                                <GradientStop Color="#FF50224F" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB1A1B1"/>
                                            <GradientStop Color="#FF50224F" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB1A1B1"/>
                                            <GradientStop Color="#FF50224F" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB1A1B1"/>
                                            <GradientStop Color="#FF50224F" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FF9DC2B3"/>
                                <GradientStop Color="#FF1D7554" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF9DC2B3"/>
                                            <GradientStop Color="#FF1D7554" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF9DC2B3"/>
                                            <GradientStop Color="#FF1D7554" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF9DC2B3"/>
                                            <GradientStop Color="#FF1D7554" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFB5B5B5"/>
                                <GradientStop Color="#FF4C4C4C" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB5B5B5"/>
                                            <GradientStop Color="#FF4C4C4C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB5B5B5"/>
                                            <GradientStop Color="#FF4C4C4C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFB5B5B5"/>
                                            <GradientStop Color="#FF4C4C4C" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FF98C1DC"/>
                                <GradientStop Color="#FF0271AE" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF98C1DC"/>
                                            <GradientStop Color="#FF0271AE" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF98C1DC"/>
                                            <GradientStop Color="#FF0271AE" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF98C1DC"/>
                                            <GradientStop Color="#FF0271AE" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFC1C0AE"/>
                                <GradientStop Color="#FF706E41" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFC1C0AE"/>
                                            <GradientStop Color="#FF706E41" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFC1C0AE"/>
                                            <GradientStop Color="#FF706E41" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFC1C0AE"/>
                                            <GradientStop Color="#FF706E41" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFADBDC0"/>
                                <GradientStop Color="#FF446A73" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFADBDC0"/>
                                            <GradientStop Color="#FF446A73" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFADBDC0"/>
                                            <GradientStop Color="#FF446A73" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFADBDC0"/>
                                            <GradientStop Color="#FF446A73" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FF2F8CE2"/>
                                <GradientStop Color="#FF0C3E69" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF2F8CE2"/>
                                            <GradientStop Color="#FF0C3E69" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF2F8CE2"/>
                                            <GradientStop Color="#FF0C3E69" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FF2F8CE2"/>
                                            <GradientStop Color="#FF0C3E69" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="Gainsboro"/>
                                <GradientStop Color="#FF757575" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="Gainsboro"/>
                                            <GradientStop Color="#FF757575" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="Gainsboro"/>
                                            <GradientStop Color="#FF757575" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="Gainsboro"/>
                                            <GradientStop Color="#FF757575" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFF4F4F4"/>
                                <GradientStop Color="#FFB7B7B7" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFB7B7B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFB7B7B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFB7B7B7" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <RadialGradientBrush x:Key="Background" Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                <GradientStop Color="#FFF4F4F4"/>
                                <GradientStop Color="#FFA3A3A3" Offset="1"/>
                            </RadialGradientBrush>
                            <Style x:Key="DataShapeStyle" TargetType="{x:Type Shape}">
                                <Setter Property="Stroke">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFA3A3A3" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="StrokeThickness" Value="2"/>
                                <Setter Property="StrokeMiterLimit" Value="1"/>
                                <Setter Property="Fill">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFA3A3A3" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DataPointStyle" TargetType="{x:Type Control}">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <RadialGradientBrush Center="0.075,0.015" GradientOrigin="-0.1,-0.1" RadiusY="0.9" RadiusX="1.05">
                                            <GradientStop Color="#FFF4F4F4"/>
                                            <GradientStop Color="#FFA3A3A3" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ResourceDictionary>
                    </dv:ResourceDictionaryCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="ChartAreaStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type Panel}">
                        <Setter Property="MinWidth" Value="400"/>
                        <Setter Property="MinHeight" Value="300"/>
                        <Setter Property="Margin" Value="0,0,-0.5,-0.5"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="PlotAreaStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type Grid}">
                        <Setter Property="Background" Value="Transparent"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type h:Chart}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Primitives:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                    <Grid Style="{TemplateBinding PlotAreaStyle}" Panel.ZIndex="-1"/>
                                    <Border BorderBrush="{DynamicResource MenuBorderColorBrush}" BorderThickness="1.0" 
                                            Panel.ZIndex="10"/>
                                </Primitives:EdgePanel>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GridLinesStyle" TargetType="Line">
            <Setter Property="Stroke" Value="{StaticResource BorderBackgroundColorBrush}"/>
            <Setter Property="StrokeThickness" Value="0.5"/>
        </Style>
        <Style x:Key="TickMarkStyle" TargetType="Line">
            <Setter Property="Stroke" Value="Transparent"/>
            <Setter Property="StrokeThickness" Value="0.5"/>
            <Setter Property="X2" Value="5"/>
            <Setter Property="Y2" Value="5"/>
        </Style>
        <Style x:Key="AxisLabelStyle" TargetType="h:AxisLabel">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="h:AxisLabel">
                        <TextBlock DataContext="{TemplateBinding FormattedContent}" Text="{Binding Converter={StaticResource IntToFrequencyConverter}}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NoiseSeriesStyle" TargetType="{x:Type h:LineSeries}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="PolylineStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type Polyline}">
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Setter Property="StrokeMiterLimit" Value="1"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type h:LineSeries}">
                        <Canvas x:Name="PlotArea">
                            <Polyline Points="{TemplateBinding Points}" Style="{TemplateBinding PolylineStyle}" 
                                      Stroke="#FF3A9BBA"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LineDataPointStyle" TargetType="{x:Type h:LineDataPoint}">
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Width" Value="8"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type h:LineDataPoint}">
                        <Grid x:Name="Root" Opacity="0">
                            <Grid.ToolTip>
                                <ContentControl Content="{TemplateBinding FormattedDependentValue}"/>
                            </Grid.ToolTip>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverHighlight">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.24"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionHighlight">
                                                <SplineDoubleKeyFrame KeyTime="0" Value="0.18"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="RevealStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.5" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Shown">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Hidden">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse Fill="Transparent" Stroke="Transparent"/>
                            <Ellipse Fill="Transparent"/>
                            <Ellipse x:Name="SelectionHighlight" Fill="Red" Opacity="0"/>
                            <Ellipse x:Name="MouseOverHighlight" Fill="White" Opacity="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AttenuationSeriesStyle" TargetType="{x:Type h:LineSeries}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="PolylineStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type Polyline}">
                        <Setter Property="StrokeThickness" Value="2"/>
                        <Setter Property="StrokeMiterLimit" Value="1"/>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type h:LineSeries}">
                        <Canvas x:Name="PlotArea">
                            <Polyline Points="{TemplateBinding Points}" Style="{TemplateBinding PolylineStyle}" 
                                      Stroke="#FF67CD5C"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
            <Style.Resources>
                <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>
                <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>
                <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF"/>
                <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000"/>
                <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF"/>
                <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>
                <Style x:Key="FocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA"/>
                <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA"/>
                <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060"/>
                <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060"/>
                <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0"/>
                <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0"/>
                <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border x:Name="border" BorderBrush="{StaticResource ScrollBar.Static.Border}" BorderThickness="0" Background="{StaticResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="{TemplateBinding Background}" CornerRadius="3"
                                        Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6"/>
                <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#A6A6A6"/>
                <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD"/>
                <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border x:Name="rectangle" Background="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" 
                                        BorderThickness="0" CornerRadius="3" Width="{TemplateBinding Width}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging" Value="true">
                                        <Setter Property="Background" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}"/>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                    </Trigger>
                                    <Trigger Property="IsDragging" Value="true">
                                        <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                    <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Width" Value="7"/>
                    <Setter Property="MinWidth" Value="1"/>
                    <Setter Property="Margin" Value="2"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0"/>
                                        <RowDefinition Height="0.00001*"/>
                                        <RowDefinition Height="0"/>
                                    </Grid.RowDefinitions>
                                    <Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"
                                            CornerRadius="3"/>
                                    <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform"/>
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Width" Value="Auto"/>
                            <Setter Property="MinWidth" Value="0"/>
                            <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                            <Setter Property="BorderThickness" Value="0,1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition Width="0.00001*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                            <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                                <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                            </RepeatButton>
                                            <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                                <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>
                                            </RepeatButton>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                            </MultiDataTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                                <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="376"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Background="#FF4A82F1">
                    <Grid Margin="15,18,17,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0" Margin="0,-6,0,6">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Column="1" Width="267" Height="180">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="2"/>
                                <Viewbox Width="267" Height="180" Stretch="Uniform" Visibility="Hidden" x:Name="RectangularDuctScheme">
                                    <Canvas VerticalAlignment="Center" HorizontalAlignment="Center" Width="800" Height="600" Margin="-180">
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="206.34,263.32 369.49,263.32" x:Name="polyline6" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.49,263.32 369.49,369.06" x:Name="polyline8" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.49,369.06 206.34,369.06" x:Name="polyline10" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="206.34,369.06 206.34,263.32" x:Name="polyline12" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.49,263.32 369.49,248.21" x:Name="polyline14" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.49,384.17 369.49,369.06" x:Name="polyline16" FillRule="NonZero" StrokeThickness="2.5" Stroke="white"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="206.34,248.21 206.34,369.06" x:Name="polyline18" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="206.34,369.06 206.34,384.17" x:Name="polyline20" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="206.34,262.37 206.34,226.85" x:Name="polyline22" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.49,262.37 369.49,226.85" x:Name="polyline24" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="221.45,228.74 369.49,228.74" x:Name="polyline26" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path28" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M221.45 226.22L206.34 228.74 206.34 228.74 221.45 231.25 221.45 226.22Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path30" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M354.39 226.22L369.49 228.74 369.49 228.74 354.39 231.25 354.39 226.22Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="287.53,220.82 287.53,202.69" x:Name="polyline32" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="366.95,263.32 411.22,263.32" x:Name="polyline34" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="366.95,369.06 411.22,369.06" x:Name="polyline36" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="409.33,278.42 409.33,353.96" x:Name="polyline38" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path40" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M406.81 278.42L409.33 263.32 409.33 263.32 411.85 278.42 406.81 278.42Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path42" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M406.81 353.96L409.33 369.06 409.33 369.06 411.85 353.96 406.81 353.96Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="388.79,322.07 388.79,303.94" x:Name="polyline44" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="388.79,313.44 391.38,310.85 393.11,309.99 395.7,309.99 397.43,310.85 398.29,313.44 398.29,322.07" x:Name="polyline46" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="457.26,263.32 561.66,263.32 561.66,369.06 457.26,369.06 457.26,263.32" x:Name="polyline56" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="443.66,249.72 575.26,249.72 575.26,382.66 443.66,382.66 443.66,249.72" x:Name="polyline58" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="457.26,263.06 457.26,227.53" x:Name="polyline60" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="561.66,263.06 561.66,227.53" x:Name="polyline62" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="472.36,229.42 546.56,229.42" x:Name="polyline64" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path66" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M472.36 226.9L457.26 229.42 457.26 229.42 472.36 231.94 472.36 226.9Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path68" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M546.56 226.9L561.66 229.42 561.66 229.42 546.56 231.94 546.56 226.9Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="502.55,209.47 506.01,221.56 509.46,209.47 512.91,221.56 516.37,209.47" x:Name="polyline70" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="561.57,369.06 606.54,369.06" x:Name="polyline72" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="561.57,263.32 606.54,263.32" x:Name="polyline74" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="604.66,353.96 604.66,278.42" x:Name="polyline76" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path78" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M602.14 353.96L604.66 369.06 604.66 369.06 607.17 353.96 602.14 353.96Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="path80" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M602.14 278.42L604.66 263.32 604.66 263.32 607.17 278.42 602.14 278.42Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="584.39,323.23 584.39,305.1" x:Name="polyline82" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="584.39,314.6 586.98,312.01 588.71,311.15 591.3,311.15 593.03,312.01 593.89,314.6 593.89,323.23" x:Name="polyline84" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                    </Canvas>
                                </Viewbox>
                                <Viewbox Width="267" Height="180" Stretch="Uniform" x:Name="RoundDuctScheme">
                                    <Canvas VerticalAlignment="Center" HorizontalAlignment="Center" Width="800" Height="600" Margin="-180">
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="457.21,308.45 457.41,303.92 458,299.43 458.98,295.01 460.34,290.68 462.08,286.5 464.17,282.48 466.6,278.65 469.36,275.06 472.42,271.72 475.77,268.65 479.36,265.89 483.18,263.46 487.2,261.37 491.39,259.63 495.71,258.27 500.14,257.29 504.63,256.7 509.16,256.5 513.69,256.7 518.18,257.29 522.61,258.27 526.93,259.63
531.12,261.37 535.14,263.46 538.96,265.89 542.55,268.65 545.9,271.72 548.96,275.06 551.72,278.65 554.15,282.48 556.24,286.5 557.98,290.68 559.34,295.01 560.32,299.43 560.91,303.92 561.11,308.45 560.91,312.98 560.32,317.47 559.34,321.9 557.98,326.22 556.24,330.41 554.15,334.43 551.72,338.25 548.96,341.85 545.9,345.19
542.55,348.25 538.96,351.01 535.14,353.44 531.12,355.54 526.93,357.27 522.61,358.63 518.18,359.61 513.69,360.21 509.16,360.4 504.63,360.21 500.14,359.61 495.71,358.63 491.39,357.27 487.2,355.54 483.18,353.44 479.36,351.01 475.77,348.25 472.42,345.19 469.36,341.85 466.6,338.25 464.17,334.43 462.08,330.41 460.34,326.22
458.98,321.9 458,317.47 457.41,312.98 457.21,308.45" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="207.5,256.5 369.87,256.5" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.87,256.5 369.87,360.4" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.87,360.4 207.5,360.4" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="207.5,360.4 207.5,256.5" FillRule="NonZero" StrokeThickness="2.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="367.33,256.5 411.39,256.5" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="367.33,360.4 411.39,360.4" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="409.51,271.53 409.51,346.7" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M407 271.53L409.51 256.5 409.51 256.5 412.02 271.53 407 271.53Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M407 345.37L409.51 360.4 409.51 360.4 412.02 345.37 407 345.37Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="398.95,296.93 398.95,314.97" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="398.95,305.52 397.23,303.8 395.52,302.95 392.94,302.95 391.22,303.8 389.5,305.52 388.64,308.1 388.64,309.82 389.5,312.4 391.22,314.11 392.94,314.97 395.52,314.97 397.23,314.11 398.95,312.4" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="207.5,256.5 207.5,221.15" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="369.87,256.5 369.87,221.15" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="222.53,223.02 369.87,223.02" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M222.53 220.52L207.5 223.02 207.5 223.02 222.53 225.53 222.53 220.52Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M354.83 220.52L369.87 223.02 369.87 223.02 354.83 225.53 354.83 220.52Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="288.29,215.15 288.29,197.11" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="509.16,360.4 601.02,361.74" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="509.16,256.5 601.02,256.5" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="599.14,346.7 599.14,271.53" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M596.63 346.7L599.14 361.74 599.14 361.74 601.64 346.7 596.63 346.7Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Path xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Fill="White">
                                            <Path.Data>
                                                <PathGeometry Figures="M596.63 271.53L599.14 256.5 599.14 256.5 601.64 271.53 596.63 271.53Z" FillRule="EvenOdd"/>
                                            </Path.Data>
                                        </Path>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="588.85,298.08 588.85,316.13" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                        <Polyline xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" Points="588.85,306.68 587.14,304.96 585.42,304.1 582.84,304.1 581.12,304.96 579.4,306.68 578.55,309.25 578.55,310.97 579.4,313.55 581.12,315.27 582.84,316.13 585.42,316.13 587.14,315.27 588.85,313.55" FillRule="NonZero" StrokeThickness="0.5" Stroke="White"/>
                                    </Canvas>
                                </Viewbox>
                            </Grid>
                        </Grid>
                        <Grid Grid.Column="1" Width="1px" Background="{StaticResource PageBorderColorBrush}"
                              Margin="15,0,0,12"/>
                        <Grid Grid.Column="2" Margin="15,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Margin="0,3" Text="Wysokość (h):" VerticalAlignment="Center"
                                       FontSize="13" Foreground="White"
                                       x:Name="HeightTextBox" Visibility="Hidden" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Row="0" Margin="0,3" Text="Średnica (d):" VerticalAlignment="Center"
                                       FontSize="13" Foreground="White"
                                       x:Name="DiameterTextBox" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Row="1" Margin="0,3" Text="Szerokość (w):" VerticalAlignment="Center"
                                       FontSize="13" Foreground="White" Visibility="Collapsed"
                                       x:Name="WidthTextBox" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Row="2" Margin="0,3" Text="Długość (l):" VerticalAlignment="Center"
                                       FontSize="13" Foreground="White"
                                       TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Row="3" Margin="0,3,12,3" Text="Grubość izolacji (f):" VerticalAlignment="Center"
                                       FontSize="13" Foreground="White"
                                       TextTrimming="CharacterEllipsis"/>
                            </Grid>
                            <Grid Grid.Column="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" x:Name="DiameterGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,3" Text="{Binding ElementDiameter}" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                    <TextBlock Grid.Column="1" Margin="0,3" Text=" mm" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                </Grid>
                                <Grid Grid.Row="0" x:Name="HeightGrid" Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,3" Text="{Binding ElementHeight}" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                    <TextBlock Grid.Column="1" Margin="0,3" Text=" mm" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                </Grid>
                                <Grid Grid.Row="1" x:Name="WidthGrid" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,3" Text="{Binding ElementWidth}" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                    <TextBlock Grid.Column="1" Margin="0,3" Text=" mm" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                </Grid>
                                <Grid Grid.Row="2" x:Name="LenghtGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,3" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource UnitConverter}">
                                                <Binding ElementName="LengthNumericUpDown" Path="Value"/>
                                                <Binding ElementName="LengthNumericUpDown" Path="Unit"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <TextBlock Grid.Column="1" Margin="0,3" Text=" mm" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                </Grid>
                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,3" VerticalAlignment="Center" FontSize="13"
                                               TextTrimming="CharacterEllipsis" Foreground="White">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Text" Value="{Binding Value, ElementName=ElementIsolationNumericUpDown}"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementIsolationComboBox}" Value="0">
                                                        <Setter Property="Text" Value="0"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <TextBlock Grid.Column="1" Margin="0,3" Text=" mm" VerticalAlignment="Center"
                                               FontSize="13" TextTrimming="CharacterEllipsis" Foreground="White"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
                <Border Grid.Row="2" Background="#FFFDFDFD">
                    <Grid Margin="15,12,15,0">
                        <h:Chart x:Name="AcousticAttenuationChart" Background="Transparent"
                                 BorderThickness="0" Style="{DynamicResource AcousticDataChartStyle}">
                            <h:Chart.Axes>
                                <h:LinearAxis Interval="10" Orientation="Y" ShowGridLines="True"
                                              GridLineStyle="{DynamicResource GridLinesStyle}"
                                              MajorTickMarkStyle="{DynamicResource TickMarkStyle}"/>
                                <h:LinearAxis Interval="1" Orientation="X" ShowGridLines="True"
                                              GridLineStyle="{DynamicResource GridLinesStyle}"
                                              MajorTickMarkStyle="{DynamicResource TickMarkStyle}"
                                              AxisLabelStyle="{DynamicResource AxisLabelStyle}"
                                              Maximum="7" Minimum="0"/>
                            </h:Chart.Axes>
                            <h:LineSeries x:Name="NoiseSeries"
                                          IndependentValuePath="Key"
                                          DependentValuePath="Value" Style="{DynamicResource NoiseSeriesStyle}" 
                                          DataPointStyle="{DynamicResource LineDataPointStyle}"/>
                            <h:LineSeries x:Name="AttenuationSeries"
                                          IndependentValuePath="Key"
                                          DependentValuePath="Value"
                                          DataPointStyle="{DynamicResource LineDataPointStyle}" 
                                          Style="{DynamicResource AttenuationSeriesStyle}"/>
                        </h:Chart>
                    </Grid>
                </Border>
            </Grid>
            <Grid Grid.Column="1" Width="2" Background="Transparent"
                  Margin="0,12,0,5"/>
            <ScrollViewer Padding="0,-1,0,0" Margin="0,8,0,0" Style="{StaticResource ScrollViewerStyle}"
                          VerticalScrollBarVisibility="Auto">
                <Grid Grid.Column="0" Margin="13.5,1,8.5,20" x:Name="ModifiableParametersGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Margin="2,6,0,0" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="32" Height="32" Margin="0,0,2,0"
                                    Background="Transparent" BorderThickness="0">
                            <Image Height="24" Stretch="Uniform" Margin="2,0,4,0" 
                                       Source="/Icons/techParameters.png"/>
                        </Border>
                        <TextBlock Text="Parametry techniczne" VerticalAlignment="Center"
                                       FontSize="18" FontWeight="Light" Grid.Column="1"/>
                    </Grid>
                    <Grid Margin="2,6,0,0" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Przekrój elementu" FontSize="13.75" Margin="0,0,0,4"
                                   x:Name ="ElementTypeTextBlock"/>
                        <c:CommandComboBox x:Name="ElementProfileComboBox" Grid.Column="1" HorizontalAlignment="Left" FontSize="13"
                                               SelectedIndex="0" Width="120" Height="28" VerticalAlignment="Center" Grid.Row="1"
                                               Style="{StaticResource OptionComboBoxStyle}">
                            <c:CommandComboBox.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                    <GradientStop Color="#FFE4E2E2" Offset="1"/>
                                </LinearGradientBrush>
                            </c:CommandComboBox.Background>
                            <ComboBoxItem Content="Okrągły" Height="28"/>
                            <ComboBoxItem Content="Prostokątny" Height="28"/>
                        </c:CommandComboBox>
                    </Grid>
                    <Grid Margin="2,12,0,0" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Style="{StaticResource DimensionsTypeButtonStyle}" x:Name="PnEnDimensionsButton"
                                FontSize="13.75" Margin="0,0,0,4" Content="Wymiary wg PN-EN 1505" HorizontalAlignment="Left"
                                Click="PnEnDimensionsTypeButton_Click" ToolTip="Użyj wymiarów zgodnych z PN-EN 1505"
                                Visibility="Hidden">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PnEnDimensionsGrid" TargetProperty="Margin">
                                            <ThicknessAnimation From="-365,0,0,0" To="0,0,0,0" Duration="0:0:0.25"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button Grid.Row="0" Style="{StaticResource DimensionsTypeButtonStyle}" x:Name="CustomDimensionsButton"
                                FontSize="13.75" Margin="0,0,0,4" Content="Wymiary niestandardowe" HorizontalAlignment="Left"
                                Click="CustomDimensionsButton_Click" ToolTip="Użyj wymiarów niestandardowych">
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard TargetName="PnEnDimensionsGrid" TargetProperty="Margin">
                                            <ThicknessAnimation From="0,0,0,0" To="-365,0,0,0" Duration="0:0:0.25"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <StackPanel Grid.Row="1" Width="341" HorizontalAlignment="Left" Orientation="Horizontal">
                            <Grid x:Name="PnEnDimensionsGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" Height="28" Panel.ZIndex="-1" Margin="0,0,0,-0.5" HorizontalAlignment="Left"
                                      Width="{Binding ActualWidth, ElementName=RoundDimensionsListBox}" x:Name="RoundDimensionsGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="0.8"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementProfileComboBox}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Border Grid.Column="0" BorderThickness="0.5,0.5,0,0" BorderBrush="{StaticResource MenuBorderColorBrush}"
                                CornerRadius="2,0,0,0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#FFEBEBEB"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFDFDFDF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource DimensionButtonStyle}"
                                            Grid.Column="0" x:Name="DiameterButton" Click="DimensionButton_Click">
                                            <Grid Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" Margin="0.5,0.5,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="Średnica [mm]" Margin="2,0,0,0"
                                                   Foreground="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" x:Name="DiameterUpImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,0 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                         Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" x:Name="DiameterDownImage" Visibility="Hidden">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,6 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                             Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                            </Grid>
                                        </Button>
                                    </Border>
                                    <Border Grid.Column="1" Background="#FFEBEBEB" BorderThickness="0,0.5,0,0" 
                                BorderBrush="{StaticResource MenuBorderColorBrush}">
                                        <Grid Background="#FFCACACA" Margin="0,2,0,2"/>
                                    </Border>
                                    <Border Grid.Column="2" BorderThickness="0,0.5,0.5,0" BorderBrush="{StaticResource MenuBorderColorBrush}"
                                CornerRadius="0,2,0,0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#FFEBEBEB"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFDFDFDF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="VelocityButton"
                                    Grid.Column="0" Style="{StaticResource DimensionButtonStyle}" Click="DimensionButton_Click">
                                            <Grid Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" Margin="0,0.5,0.5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="Prędkość [m/s]" Margin="2,0,0,0"
                                           Foreground="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="VelocityUpImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,0 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="VelocityDownImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,6 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                            </Grid>
                                        </Button>
                                    </Border>
                                </Grid>
                                <Grid Grid.Row="0" Height="28" Panel.ZIndex="-1" Margin="0,0,0,-0.5" HorizontalAlignment="Left"
                                  Width="{Binding ActualWidth, ElementName=RectangularDimensionsListBox}" x:Name="RectangularDimensionsGrid">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="0.8"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="0.8"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementProfileComboBox}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <Border Grid.Column="0" BorderThickness="0.5,0.5,0,0" BorderBrush="{StaticResource MenuBorderColorBrush}"
                                CornerRadius="2,0,0,0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#FFEBEBEB"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFDFDFDF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Style="{StaticResource DimensionButtonStyle}"
                                            Grid.Column="0" x:Name="WidthButton" Click="RectagularDimensionButton_Click">
                                            <Grid Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" Margin="0.5,0.5,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="Szerokość [mm]" Margin="2,0,0,0"
                                                   Foreground="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" x:Name="WidthUpImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,0 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" x:Name="WidthDownImage" Visibility="Hidden">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,6 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                            </Grid>
                                        </Button>
                                    </Border>
                                    <Border Grid.Column="1" Background="#FFEBEBEB" BorderThickness="0,0.5,0,0" 
                                        BorderBrush="{StaticResource MenuBorderColorBrush}">
                                        <Grid Background="#FFCACACA" Margin="0,2" Grid.Row="1"/>
                                    </Border>
                                    <Border Grid.Column="2" BorderThickness="0,0.5,0,0" BorderBrush="{StaticResource MenuBorderColorBrush}">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#FFEBEBEB"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFDFDFDF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="HeightButton" Margin="0,0.5,0,0"
                                            Grid.Column="0" Style="{StaticResource DimensionButtonStyle}" Click="RectagularDimensionButton_Click">
                                            <Grid Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="Wysokość [mm]" Margin="2,0,0,0"
                                           Foreground="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="HeightUpImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,0 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="HeightDownImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,6 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                            </Grid>
                                        </Button>
                                    </Border>
                                    <Border Grid.Column="3" Background="#FFEBEBEB" BorderThickness="0,0.5,0,0" 
                                        BorderBrush="{StaticResource MenuBorderColorBrush}">
                                        <Grid Background="#FFCACACA" Margin="0,2" Grid.Row="1"/>
                                    </Border>
                                    <Border Grid.Column="4" BorderThickness="0,0.5,0.5,0" BorderBrush="{StaticResource MenuBorderColorBrush}"
                                CornerRadius="0,2,0,0">
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="Background" Value="#FFEBEBEB"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#FFDFDFDF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Button VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="RectangularVelocityButton"
                                            Grid.Column="0" Style="{StaticResource DimensionButtonStyle}" Click="RectagularDimensionButton_Click">
                                            <Grid Background="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" Margin="0,0.5,0.5,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="4*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Label Content="Prędkość [m/s]" Margin="2,0,0,0"
                                           Foreground="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}"/>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="RectangularVelocityUpImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,0 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                 Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                                <Image SnapsToDevicePixels="False" Width="7" Grid.Column="1" Visibility="Hidden" x:Name="RectangularVelocityDownImage">
                                                    <Image.Source>
                                                        <DrawingImage>
                                                            <DrawingImage.Drawing>
                                                                <GeometryDrawing Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" Geometry="M5,3 L2.5,6 L0,3">
                                                                    <GeometryDrawing.Pen>
                                                                        <Pen Brush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType={x:Type Button}, Mode=FindAncestor}}" 
                                                                         Thickness="0.25"/>
                                                                    </GeometryDrawing.Pen>
                                                                </GeometryDrawing>
                                                            </DrawingImage.Drawing>
                                                        </DrawingImage>
                                                    </Image.Source>
                                                </Image>
                                            </Grid>
                                        </Button>
                                    </Border>
                                </Grid>
                                <c:CommandListBox Grid.Row="1" Width="341" ScrollViewer.CanContentScroll="False" Height="172" BorderThickness="0.75" 
                                              Padding="-0.75" BorderBrush="{StaticResource BorderBackgroundColorBrush}" SelectedIndex="2"
                                              HorizontalAlignment="Left" x:Name="RoundDimensionsListBox" Background="Transparent"
                                              CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=Self}}" 
                                              Command="{Binding GetElementDiameter}" ItemsSource="{Binding DiametersList}" 
                                              Template="{DynamicResource ListBoxControlTemplate}">
                                    <c:CommandListBox.Resources>
                                        <ControlTemplate x:Key="ListBoxControlTemplate" TargetType="{x:Type ListBox}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                                                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" Focusable="False" Padding="{TemplateBinding Padding}">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" TargetName="Bd" Value="White"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFD9D9D9"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </c:CommandListBox.Resources>
                                    <c:CommandListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid VerticalAlignment="Center">
                                                <TextBlock VerticalAlignment="Center" Text="{Binding Diameter}" Grid.Column="0"
                                               FontSize="13" Height="20" Margin="7.5,3,0,1.5" x:Name="DiameterTextBlock"/>
                                                <TextBlock VerticalAlignment="Center" Text="{Binding Velocity}" Grid.Column="1"
                                               FontSize="13" Height="20" Margin="190.5,3,0,1.5" x:Name="RoundAirVelocityTextBlock"/>
                                            </Grid>
                                        </DataTemplate>
                                    </c:CommandListBox.ItemTemplate>
                                    <c:CommandListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter VerticalAlignment="Stretch"
                                                                  HorizontalAlignment="Stretch"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="#FF11A6F3"
                                                                 Opacity="0.2"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="#FF4C82EE"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="#FFD1D1D1"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="#FF4476D9"
                                                                 Opacity="1.0"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </c:CommandListBox.ItemContainerStyle>
                                    <c:CommandListBox.Style>
                                        <Style TargetType="{x:Type ListBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementProfileComboBox}" Value="1">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </c:CommandListBox.Style>
                                </c:CommandListBox>
                                <c:CommandListBox Grid.Row="1" Width="341" ScrollViewer.CanContentScroll="False" Height="172" BorderThickness="0.75" 
                                      Padding="-0.75" BorderBrush="{StaticResource BorderBackgroundColorBrush}" SelectedIndex="2"
                                      HorizontalAlignment="Left" x:Name="RectangularDimensionsListBox" Background="Transparent"
                                      CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=Self}}" 
                                      Command="{Binding GetElementRectangular}" ItemsSource="{Binding RectangularList}"
                                      Template="{DynamicResource ListBoxControlTemplate}">
                                    <c:CommandListBox.Resources>
                                        <ControlTemplate x:Key="ListBoxControlTemplate" TargetType="{x:Type ListBox}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                                                <ScrollViewer Style="{StaticResource ScrollViewerStyle}" Focusable="False" Padding="{TemplateBinding Padding}">
                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" TargetName="Bd" Value="White"/>
                                                    <Setter Property="BorderBrush" TargetName="Bd" Value="#FFD9D9D9"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsGrouping" Value="True"/>
                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </c:CommandListBox.Resources>
                                    <c:CommandListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid VerticalAlignment="Center">
                                                <TextBlock VerticalAlignment="Center" Text="{Binding Width}" Grid.Column="0"
                                               FontSize="13" Height="20" Margin="7.5,3,0,1.5" x:Name="WidthTextBlock"/>
                                                <TextBlock VerticalAlignment="Center" Text="{Binding Height}" Grid.Column="1"
                                               FontSize="13" Height="20" Margin="130.5,3,0,1.5" x:Name="HeightTextBlock"/>
                                                <TextBlock VerticalAlignment="Center" Text="{Binding Velocity}" Grid.Column="1"
                                               FontSize="13" Height="20" Margin="252.5,3,0,1.5" x:Name="RectangularAirVelocityTextBlock"/>
                                            </Grid>
                                        </DataTemplate>
                                    </c:CommandListBox.ItemTemplate>
                                    <c:CommandListBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ListBoxItem}">
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                        <Grid Background="{TemplateBinding Background}">
                                                            <ContentPresenter VerticalAlignment="Stretch"
                                                                  HorizontalAlignment="Stretch"/>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="#FF11A6F3"
                                                                 Opacity="0.2"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="#FF4C82EE"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="False"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background" Value="#FFD1D1D1"/>
                                                    <Setter Property="Foreground" Value="Black"/>
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                        <Condition Property="IsMouseOver" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="#FF4476D9"
                                                                 Opacity="1.0"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </MultiTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </c:CommandListBox.ItemContainerStyle>
                                    <c:CommandListBox.Style>
                                        <Style TargetType="{x:Type ListBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementProfileComboBox}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </c:CommandListBox.Style>
                                </c:CommandListBox>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <Grid Margin="2,12,0,0" Grid.Row="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Długość kanału" FontSize="13.75" HorizontalAlignment="Left" Margin="0,0,0,4"
                                   x:Name ="LengthTextBlock" Grid.Row="0"/>
                        <Grid Width="{Binding Width, ElementName=ElementIsolationComboBox}" Grid.Row="1"
                              HorizontalAlignment="Left" Margin="0,1.75,0,0" x:Name="LengthThicknessGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <c:NumericUpDown Grid.Column="0" MinValue="0" MaxValue="999990" 
                                         Value="{Binding ElementLength, Mode=TwoWay}"
                                         Unit="{Binding LengthUnit, Mode=TwoWay}"
                                         UnitChanged="LengthNumericUpDown_UnitChanged"
                                         Tick="10" x:Name="LengthNumericUpDown" MaxLength="6"
                                         LostFocus="LengthNumericUpDown_LostFocus"/>
                            <Border Margin="-2,-2,-2,-2.5" Panel.ZIndex="-1" CornerRadius="3.0"
                                x:Name="LengthNumericUpDownBorder"/>
                            <c:CommandComboBox x:Name="LengthUnitComboBox" Grid.Column="1" HorizontalAlignment="Left" FontSize="13"
                                           SelectedIndex="0" Width="60" Height="28" VerticalAlignment="Center"
                                           Style="{StaticResource OptionComboBoxStyle}" Margin="11,0,0,0"
                                           SelectionChanged="LengthUnitComboBox_SelectionChanged">
                                <ComboBoxItem Content="mm" Height="28"/>
                                <ComboBoxItem Content="m" Height="28"/>
                            </c:CommandComboBox>
                        </Grid>
                    </Grid>
                    <Grid Grid.Row="4" Margin="-14,14,-12,0" 
                          Height="0.75">
                        <Grid.Background>
                            <LinearGradientBrush>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                    <GradientStop Color="#FFFDFDFD" Offset="0.02"/>
                                    <GradientStop Color="#FFD4D4D4" Offset="0.15"/>
                                    <GradientStop Color="#FFD4D4D4" Offset="0.85"/>
                                    <GradientStop Color="#FFFDFDFD" Offset="0.98"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>
                    <Grid Margin="2,6,0,0" Grid.Row="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" Width="32" Height="32" Margin="0,0,2,0"
                                    Background="Transparent" BorderThickness="0">
                            <Image Stretch="Uniform" Source="/Icons/isolation.png"
                                       Margin="-5"/>
                        </Border>
                        <TextBlock Text="Izolacja" VerticalAlignment="Center" Grid.Column="1"
                                       FontSize="18" FontWeight="Light"/>
                    </Grid>
                    <Grid Margin="2,6,0,0" Grid.Row="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Text="Czy izolowany" FontSize="13.75" Margin="0,0,0,4"/>
                        <c:CommandComboBox x:Name="ElementIsolationComboBox" Grid.Column="1" HorizontalAlignment="Left" FontSize="13"
                                               SelectedIndex="0" Width="220" Height="28" VerticalAlignment="Center" Grid.Row="1"
                                               Style="{StaticResource OptionComboBoxStyle}"
                                               SelectionChanged="ElementIsolationComboBox_SelectionChanged">
                            <ComboBoxItem Content="Brak izolacji" Height="28"/>
                            <ComboBoxItem Content="Kanał izolowany akustycznie" Height="28"/>
                        </c:CommandComboBox>
                        <StackPanel Grid.Row="2" Margin="0,10,0,0" x:Name="IsolationStackPanel">
                            <StackPanel.Style>
                                <Style TargetType="{x:Type StackPanel}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementIsolationComboBox}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Grubość izolacji" FontSize="13.75" HorizontalAlignment="Left" Margin="0,0,0,4"
                                   x:Name ="IsolationTextBlock">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementIsolationComboBox}" Value="0">
                                                <Setter Property="Foreground" Value="#FFDDD8D8" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Grid Width="{Binding Width, ElementName=ElementIsolationComboBox}"
                              HorizontalAlignment="Left" Margin="0,1.75,0,0" x:Name="IsolationThicknessGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <c:NumericUpDown Grid.Column="0" MinValue="0" MaxValue="75"
                                                     Tick="5" x:Name="ElementIsolationNumericUpDown"
                                                     Value="{Binding IsolationThickness, Mode=TwoWay}"/>
                                <Border Margin="-2,-2,-2,-2.5" Panel.ZIndex="-1" CornerRadius="3.0"
                                            x:Name="NumericUpDownBorder"/>
                                <TextBlock Grid.Column="1" Text="mm" VerticalAlignment="Center"
                                               Margin="11,-3,20,0" FontSize="13.75" x:Name="UnitTextBlock">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedIndex, ElementName=ElementIsolationComboBox}" Value="0">
                                                    <Setter Property="Foreground" Value="{StaticResource BorderBackgroundColorBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Row="7" Margin="-14,14,-12,0" 
                          Height="0.75">
                        <Grid.Background>
                            <LinearGradientBrush>
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="Transparent" Offset="0"/>
                                    <GradientStop Color="#FFFDFDFD" Offset="0.02"/>
                                    <GradientStop Color="#FFD4D4D4" Offset="0.15"/>
                                    <GradientStop Color="#FFD4D4D4" Offset="0.85"/>
                                    <GradientStop Color="#FFFDFDFD" Offset="0.98"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Grid.Background>
                    </Grid>
                    <Grid Margin="2,6,0,0" Grid.Row="8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Przepływ powietrza" VerticalAlignment="Center"
                                       FontSize="18" FontWeight="Light" Grid.Column="1"/>
                        <Border Grid.Column="0" Width="32" Height="32" Margin="0,0,2,0"
                                    Background="Transparent" BorderThickness="0">
                            <Image Stretch="Uniform" Source="/Icons/airFlow.png" Margin="2"/>
                        </Border>
                    </Grid>
                    <Grid Margin="2,6,0,10" Grid.Row="9">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Strumień objętości" FontSize="13.75" HorizontalAlignment="Left" Margin="0,0,0,4"
                               x:Name ="AirVolumeTextBlock" Grid.Row="0"/>
                        <Grid Width="{Binding Width, ElementName=ElementIsolationComboBox}" Grid.Row="1"
                                  HorizontalAlignment="Left" Margin="0,1.75,0,0" x:Name="AirVolumeGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <c:NumericUpDown Grid.Column="0" MinValue="10" MaxValue="99995" Value="{Binding AirVolume, Mode=TwoWay}"
                                                 Unit="{Binding AirVolumeUnit, Mode=TwoWay}"
                                                 UnitChanged="AirVolumeNumericUpDown_UnitChanged"
                                                 Tick="5" x:Name="AirVolumeNumericUpDown" MaxLength="5"
                                                 LostFocus="LengthNumericUpDown_LostFocus"/>
                            <Border Margin="-2,-2,-2,-2.5" Panel.ZIndex="-1" CornerRadius="3.0"
                                        x:Name="AirVolumeNumericUpDownBorder"/>
                            <c:CommandComboBox x:Name="AirVolumeUnitComboBox" Grid.Column="1" HorizontalAlignment="Left" FontSize="13"
                                                   SelectedIndex="0" Width="72" Height="28" VerticalAlignment="Center"
                                                   Style="{StaticResource OptionComboBoxStyle}" Margin="11,0,0,0"
                                                   SelectionChanged="AirVolumeUnitComboBox_SelectionChanged">
                                <ComboBoxItem Height="28">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="m" Grid.Column="0"/>
                                        <TextBlock Text="3" FontSize="7" Grid.Column="1"/>
                                        <TextBlock Text="/h" Grid.Column="2"/>
                                    </Grid>
                                </ComboBoxItem>
                                <ComboBoxItem Height="28">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="dm" Grid.Column="0"/>
                                        <TextBlock Text="3" FontSize="7" Grid.Column="1"/>
                                        <TextBlock Text="/s" Grid.Column="2"/>
                                    </Grid>
                                </ComboBoxItem>
                            </c:CommandComboBox>
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
