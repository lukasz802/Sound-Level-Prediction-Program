<Window x:Class="SoundLevelCalculator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:t="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SoundLevelCalculator"
        xmlns:c="clr-namespace:SoundLevelCalculator.Controls"
        mc:Ignorable="d"
        x:Name="mainWindow"
        Title="Noise Level Calculator" SnapsToDevicePixels="True"
        MinHeight="500" MinWidth="800" Height="670" Width="1130">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="30"
                                  CornerRadius="0"
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="5"
                                  UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{StaticResource MenuBarBackgroundColorBrush}"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border TextOptions.TextRenderingMode="ClearType"
                                RenderOptions.BitmapScalingMode="HighQuality" 
                                RenderOptions.ClearTypeHint="Enabled"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="Padding" Value="7"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Style x:Key="MenuBarControlButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="0,0.5,0,0"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"
                                Name="Panel">
                            <StackPanel Name="ContentStackPanel"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Content="{TemplateBinding Content}"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF5878BA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ElementTypeComboBox" TargetType="ComboBox">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid SnapsToDevicePixels="True">
                            <ToggleButton Name="ToggleButton" Focusable="False" ClickMode="Press"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Name="Border" BorderBrush="Transparent" VerticalAlignment="Stretch"
                                                Background="Transparent">
                                            <Grid Name="ContentGridPanel" VerticalAlignment="Center"
                                                  HorizontalAlignment="Center">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0" Height="0.8" Background="Black"
                                                      Width="26" Margin="0,0,0,4"/>
                                                <Grid Grid.Row="1" Height="0.8" Background="Black"
                                                      Width="26" Margin="0,0,0,4"/>
                                                <Grid Grid.Row="2" Height="0.8" Background="Black"
                                                      Width="26"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FFE2E2E2"
                                                                         Opacity="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FFD7D7D7"
                                                                         Opacity="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FFD7D7D7"
                                                                         Opacity="0.8"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Cursor" Value="Hand"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup Name="Popup"
                                   SnapsToDevicePixels="True"
                                   Placement="Bottom"
                                   VerticalOffset="-36"
                                   HorizontalOffset="0"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Fade">
                                <Grid Name="DropDown"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border Name="DropDownBorder"
                                            Background="White"
                                            BorderThickness="0.5"
                                            BorderBrush="{StaticResource MenuBorderColorBrush}"/>
                                    <ScrollViewer Margin="0.5,0.5,1,0.5">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" SnapsToDevicePixels="True">
                            <ContentPresenter VerticalAlignment="Center"
                                              Margin="10,0,0,0"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF3EA2D4"
                                                         Opacity="0.25"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="9.75"/>
            <RowDefinition Height="100*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="0,0,0,-1" Background="{StaticResource MenuBarBackgroundColorBrush}">
            <Label HorizontalAlignment="Center" FontSize="11.75" Foreground="White" Content="{Binding ElementName=mainWindow, Path=Title}"/>
            <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
                <Button x:Name="CloseButton"
                        Click="MenuBarButton_Click"
                        Width="45" ToolTip="Zamknij">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MenuBarControlButtonStyle}" TargetType="Button">
                            <Setter Property="Margin" Value="0.5,0.5,0,0"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFCE2E2E"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="#FFCE2E2E"
                                                             Opacity="0.8"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image Width="10" Height="10" Margin="0">
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=BorderBrush}"
                                                 Thickness="0.35"/>
                                        </GeometryDrawing.Pen>
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,0">
                                                    <LineSegment Point="5,5"/>
                                                </PathFigure>
                                                <PathFigure StartPoint="5,0">
                                                    <LineSegment Point="0,5"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </Button>
                <Button x:Name="MaximizeButton"
                        Click="MenuBarButton_Click"
                        Width="45" ToolTip="Maksymalizuj">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MenuBarControlButtonStyle}" TargetType="Button">
                            <Setter Property="BorderBrush" Value="{StaticResource MenuBarBackgroundColorBrush}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border BorderThickness="0"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Background="{TemplateBinding Background}"
                                                VerticalAlignment="Stretch" 
                                                HorizontalAlignment="Stretch"
                                                Name="Panel">
                                            <StackPanel Name="ContentStackPanel"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Center">
                                                <Image Name="Image" Source="{DynamicResource Maximize}" 
                                                       Width="10" Height="10" Margin="0"/>
                                            </StackPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=mainWindow, Path=WindowState}" Value="Maximized">
                                                <Setter TargetName="Image" Property="Source" Value="{DynamicResource Maximized}"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF5878BA"/>
                                    <Setter Property="BorderBrush" Value="#FF5878BA"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Resources>
                        <DrawingImage x:Key="Maximize">
                            <DrawingImage.Drawing>
                                <GeometryDrawing>
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="White" LineJoin="Miter" Thickness="0.35"/>
                                    </GeometryDrawing.Pen>
                                    <GeometryDrawing.Geometry>
                                        <PathGeometry>
                                            <PathFigure IsClosed="True" StartPoint="0,0">
                                                <LineSegment Point="5,0"/>
                                                <LineSegment Point="5,5"/>
                                                <LineSegment Point="0,5"/>
                                                <LineSegment Point="0,0"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                        <DrawingImage x:Key="Maximized">
                            <DrawingImage.Drawing>
                                <DrawingGroup>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="White" LineJoin="Miter" Thickness="0.35"/>
                                        </GeometryDrawing.Pen>
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry>
                                                <PathFigure IsClosed="True" StartPoint="1.2,-1.2">
                                                    <LineSegment Point="6.2,-1.2"/>
                                                    <LineSegment Point="6.2,3.8"/>
                                                    <LineSegment Point="1.2,3.8"/>
                                                    <LineSegment Point="1.2,-1.2"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                    <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=BorderBrush}">
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="White" LineJoin="Miter" Thickness="0.35"/>
                                        </GeometryDrawing.Pen>
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry>
                                                <PathFigure IsClosed="True" StartPoint="0,0">
                                                    <LineSegment Point="5,0"/>
                                                    <LineSegment Point="5,5"/>
                                                    <LineSegment Point="0,5"/>
                                                    <LineSegment Point="0,0"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Button.Resources>
                </Button>
                <Button x:Name="MinimizeButton"
                        Style="{StaticResource MenuBarControlButtonStyle}"
                        Click="MenuBarButton_Click"
                        Width="45" ToolTip="Minimalizuj">
                    <Image Width="10" Height="10" Margin="0">
                        <Image.Source>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Pen>
                                            <Pen Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=BorderBrush}"
                                                 Thickness="0.35"/>
                                        </GeometryDrawing.Pen>
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry>
                                                <PathFigure StartPoint="0,0">
                                                    <LineSegment Point="5,0"/>
                                                </PathFigure>
                                            </PathGeometry>
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </Image.Source>
                    </Image>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1" Background="{StaticResource MenuBarBackgroundColorBrush}"/>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Background="Transparent">
                <TreeView Background="{StaticResource MenuBackgroundColorBrush}" 
                          BorderThickness="0" Name="ElementsTreeView" Padding="-1,0,0,0"
                          ItemsSource="{Binding Source={StaticResource ElementsListViewData}, XPath=ListViewItem}"
                          SelectedItemChanged="ElementsTreeView_SelectedItemChanged" ScrollViewer.CanContentScroll="False"
                          SizeChanged="ElementsTreeView_SizeChanged"
                          FontFamily="/Fonts/Roboto-Light.ttf #Roboto Light">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="TreeViewItem">
                                        <Grid Margin="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="24"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid Grid.Row="0" x:Name="ContentGrid" PreviewMouseDown="ContentGrid_PreviewMouseDown">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding XPath=Margin}"/>
                                                    <ColumnDefinition Width="24"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ToggleButton x:Name="Expander" ClickMode="Press" Grid.Column="1" Grid.Row="0" HorizontalAlignment="Right"
                                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton">
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Width" Value="22"/>
                                                            <Setter Property="Height" Value="22"/>
                                                            <Setter Property="BorderBrush" Value="{StaticResource MenuBorderColorBrush}"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                        <Border BorderThickness="0" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}"
                                                                                VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                                                            <Viewbox Grid.Column="1" Margin="6,4,6,8" x:Name="ImageBox">
                                                                                <Grid>
                                                                                    <Path Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=BorderBrush}"
                                                                                          StrokeThickness="0.75" StrokeLineJoin="Round"
                                                                                          Data="M5,3L2.5,6L0,3"
                                                                                          VerticalAlignment="Center"/>
                                                                                </Grid>
                                                                            </Viewbox>
                                                                        </Border>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" Value="{StaticResource ActiveItemBaseControl}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                <Setter Property="Margin" TargetName="ImageBox" Value="6,4,6,8"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" 
                                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                                        Background="{TemplateBinding Background}" 
                                                        Grid.Column="2" SnapsToDevicePixels="True">
                                                    <ContentPresenter x:Name="PART_Header" ContentSource="Header" Margin="-2,0,0,0"
                                                                      HorizontalAlignment="Left" 
                                                                      SnapsToDevicePixels="True"/>
                                                </Border>
                                                <Grid.Style>
                                                    <Style TargetType="Grid">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="#FF11A6F3"
                                                                                         Opacity="0.15"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                            </Grid>
                                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="False">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                                <Setter Property="LayoutTransform" TargetName="Expander">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="-90"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Background" TargetName="ContentGrid">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FF11A6F3"
                                                                         Opacity="0.25"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsSelectionActive" Value="False"/>
                                                    <Condition Property="Selector.IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="ContentGrid">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="#FF11A6F3"
                                                                         Opacity="0.25"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                    <Condition Property="IsSelectionActive" Value="False"/>
                                                    <Condition Property="Selector.IsMouseOver" Value="False"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="ContentGrid" Value="#FFD1D1D1"/>
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="True">
                                    <Setter Property="ItemsPanel">
                                        <Setter.Value>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel/>
                                            </ItemsPanelTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource ="{Binding XPath=ListViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="21"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Margin="{Binding XPath=ImageMargin}">
                                    <Image Margin="3,0,-1.5,0">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="{Binding XPath=Image}"/>
                                                <Setter Property="Height" Value="Auto"/>
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True"/>
                                                            <Condition Binding="{Binding XPath=Image}" Value="{x:Null}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Source" Value="Icons/openedFolder.png"/>
                                                        <Setter Property="Height" Value="19"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TreeViewItem}, Path=IsExpanded}" Value="False"/>
                                                            <Condition Binding="{Binding XPath=Image}" Value="{x:Null}"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Source" Value="Icons/closedFolder.png"/>
                                                        <Setter Property="Height" Value="19"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </Grid>
                                <TextBlock Grid.Column="1" Margin="8,0,5,0" VerticalAlignment="Center"
                                           Text="{Binding XPath=Head}" FontSize="11" x:Name="Txt"/>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Grid>
            <Grid Grid.Column="1" VerticalAlignment="Top" Height="66" 
                  Panel.ZIndex="1">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                        <GradientStop Color="#FFEEEEEE" Offset="0"/>
                        <GradientStop Color="#FFF5F4F4" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                    <c:CommandComboBox Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                       HorizontalAlignment="Left" Style="{StaticResource ElementTypeComboBox}"
                                       SelectedIndex="0" x:Name="ElementsTypeComboBox"
                                       FontFamily="/Fonts/RobotoCondensed-Light.ttf #Roboto Light">
                        <c:CommandComboBox.Background>
                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                <GradientStop Color="#FFF0F0F0" Offset="0"/>
                                <GradientStop Color="#FFD8DADA" Offset="1"/>
                            </LinearGradientBrush>
                        </c:CommandComboBox.Background>
                        <ComboBoxItem Content="Kanał prosty" Height="36" Width="200"/>
                        <ComboBoxItem Content="Łuk" Height="36" Width="200"/>
                        <ComboBoxItem Content="Kolano" Height="36" Width="200"/>
                        <ComboBoxItem Content="Redukcja" Height="36" Width="200"/>
                        <ComboBoxItem Content="Trójnik" Height="36" Width="200"/>
                        <ComboBoxItem Content="Czwórnik" Height="36" Width="200"/>
                        <ComboBoxItem Content="Kratka nawiewna" Height="36" Width="200"/>
                        <ComboBoxItem Content="Kratka wyciągowa" Height="36" Width="200"/>
                        <ComboBoxItem Content="Wentylator" Height="36" Width="200"/>
                        <ComboBoxItem Content="Tłumik" Height="36" Width="200"/>
                        <ComboBoxItem Content="Przepustnica" Height="36" Width="200"/>
                        <ComboBoxItem Content="Skrzynka rozprężna" Height="36" Width="200"/>
                    </c:CommandComboBox>
                    <Grid Width="0.8">
                        <Grid.Background>
                            <SolidColorBrush Color="#FFE2E2E2"
                                             Opacity="0.8"/>
                        </Grid.Background>
                    </Grid>
                    <TextBlock Text="Kanał prosty" FontSize="20" Margin="7.5,0,0,0"
                               x:Name ="ItemTextBlock" VerticalAlignment="Center"
                               FontFamily="/Fonts/RobotoCondensed-Regular.ttf #Roboto Light"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="56"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TabControl Background="Transparent" BorderThickness="0" Margin="-1,-1,-2,0"
                            Grid.Row="1">
                    <TabItem Visibility="Collapsed" x:Name="DuctTabItem">
                        <Frame Source="Pages/DuctPage.xaml" Margin="-1,0,0,0"/>
                    </TabItem>
                    <TabItem Visibility="Collapsed" x:Name="DiffuserTabItem">
                        <Frame Source="Pages/DiffuserPage.xaml" Margin="-1,0,0,0"/>
                    </TabItem>
                    <TabControl.Style>
                        <Style TargetType="TabControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ElementsTypeComboBox, Path=SelectedIndex}" Value="0">
                                    <Setter Property="SelectedIndex" Value="0"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=ElementsTypeComboBox, Path=SelectedIndex}" Value="3">
                                    <Setter Property="SelectedIndex" Value="1"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TabControl.Style>
                </TabControl>
            </Grid>
        </Grid>
    </Grid>
</Window>
