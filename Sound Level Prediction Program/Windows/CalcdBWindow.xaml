<Window x:Class="Sound_Level_Prediction_Program.Windows.CalcdBWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Sound_Level_Prediction_Program"
        mc:Ignorable="d" Height="328" Width="500" x:Name="calcWindow"
        xmlns:c="clr-namespace:Sound_Level_Prediction_Program.Controls"
        WindowStartupLocation="CenterOwner" SnapsToDevicePixels="True"
        ResizeMode="NoResize" KeyDown="Window_KeyDown" Title="Kalkulator hałasu">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="30"
                                  CornerRadius="0"
                                  GlassFrameThickness="0"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="5"
                                  UseAeroCaptionButtons="False"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="0.5"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Border TextOptions.TextRenderingMode="ClearType"
                                RenderOptions.BitmapScalingMode="HighQuality" 
                                RenderOptions.ClearTypeHint="Enabled"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.Resources>
        <Style x:Key="MenuBarControlButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="0,0.5,0,0"/>
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"
                                Name="Panel">
                            <StackPanel Name="ContentStackPanel"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                <ContentPresenter VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Content="{TemplateBinding Content}"/>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#FF5878BA"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CharButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="0.75">
                            <Border Name="Panel" BorderBrush="Transparent" VerticalAlignment="Stretch" BorderThickness="0.5">
                                <Grid Name="ContentGridPanel" VerticalAlignment="Stretch" Margin="0.0"
                                      HorizontalAlignment="Stretch" Background="{Binding ElementName=MainPanel, Path=Background}">
                                    <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      Content="{TemplateBinding Content}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF11A6F3"
                                                         Opacity="0.15"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="#FF117DF3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF3EA2D4"
                                                         Opacity="0.25"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="#FF1A1AB3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MenuBorderColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DigitButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="0.75">
                            <Border Name="Panel" BorderBrush="Transparent" VerticalAlignment="Stretch" BorderThickness="0.5">
                                <Grid Name="ContentGridPanel" VerticalAlignment="Stretch" Margin="0.0"
                                      HorizontalAlignment="Stretch" Background="{Binding ElementName=MainPanel, Path=Background}">
                                    <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      Content="{TemplateBinding Content}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF11A6F3"
                                                         Opacity="0.15"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="#FF117DF3"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FF3EA2D4"
                                                         Opacity="0.25"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="#FF1A1AB3"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource MenuBorderColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FunctionButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Margin="0.75">
                            <Border Name="Panel" BorderBrush="Transparent" VerticalAlignment="Stretch" BorderThickness="0.5">
                                <Grid Name="ContentGridPanel" VerticalAlignment="Stretch" Margin="0.0"
                                      HorizontalAlignment="Stretch" Background="#FF117DF3">
                                    <ContentPresenter VerticalAlignment="Center"
                                                      HorizontalAlignment="Center"
                                                      Content="{TemplateBinding Content}"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background" 
                                        Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                                <Setter TargetName="Panel" Property="BorderBrush" 
                                        Value="{StaticResource MenuBarActiveControlColorBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentGridPanel" Property="Background"
                                        Value="#FF5878BA"/>
                                <Setter TargetName="Panel" Property="BorderBrush" Value="#FF5878BA"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="White" x:Name="MainPanel">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Button x:Name="CloseButton" HorizontalAlignment="Right"
                    Click="MenuBarButton_Click" Width="45" ToolTip="Zamknij">
                <Button.Style>
                    <Style BasedOn="{StaticResource MenuBarControlButtonStyle}" TargetType="Button">
                        <Setter Property="Margin" Value="0.5,0.5,0,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFCE2E2E"/>
                                <Setter Property="BorderBrush" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" Value="White"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="#FFCE2E2E"
                                                         Opacity="0.8"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Image Width="10" Height="10" Margin="0">
                    <Image.Source>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing>
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=BorderBrush}"
                                             Thickness="0.35"/>
                                    </GeometryDrawing.Pen>
                                    <GeometryDrawing.Geometry>
                                        <PathGeometry>
                                            <PathFigure StartPoint="0,0">
                                                <LineSegment Point="5,5"/>
                                            </PathFigure>
                                            <PathFigure StartPoint="5,0">
                                                <LineSegment Point="0,5"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </GeometryDrawing.Geometry>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </Image.Source>
                </Image>
            </Button>
            <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"
                   FontSize="11.75" Foreground="Black" Content="{Binding ElementName=calcWindow, Path=Title}"/>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.8*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" HorizontalAlignment="Left" Margin="6,0,0,0"
              Width="{Binding ElementName=ButtonsGrid, Path=Width}">
                    <TextBlock FontSize="13.5" Text="{Binding Equation}" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                       Margin="0,0,4,0" Foreground="Gray" x:Name="EquationTextBlock"/>
                </Grid>
                <Grid Grid.Row="1" HorizontalAlignment="Left" Margin="6,0,0,0"
                      Width="{Binding ElementName=ButtonsGrid, Path=Width}">
                    <TextBlock x:Name="ResultTextBlock" FontSize="20.5" FontWeight="SemiBold"
                       Text="{Binding Result}" VerticalAlignment="Top" HorizontalAlignment="Right"
                       Margin="0,0,4,0"/>
                </Grid>
                <Grid Width="300" Height="218" Margin="3" x:Name="ButtonsGrid"
                      Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Row="0" Grid.Column="0" Command="{Binding ClearEntryCommand}"
                        Style="{StaticResource CharButtonStyle}">
                        <Label Content="MC" FontSize="11" FontWeight="SemiBold"
                           Foreground="Gray"/>
                    </Button>
                    <Button Grid.Row="0" Grid.Column="1" Command="{Binding ClearEntryCommand}"
                        Style="{StaticResource CharButtonStyle}" >
                        <Label Content="M+" FontSize="11" FontWeight="SemiBold"
                           Foreground="Gray"/>
                    </Button>
                    <Button Grid.Row="0" Grid.Column="2" Command="{Binding ClearEntryCommand}"
                        Style="{StaticResource CharButtonStyle}" >
                        <Label Content="M-" FontSize="11" FontWeight="SemiBold"
                           Foreground="Gray"/>
                    </Button>
                    <Button Grid.Row="0" Grid.Column="3" Command="{Binding ClearEntryCommand}"
                        Style="{StaticResource CharButtonStyle}" >
                        <Label Content="MR" FontSize="11" FontWeight="SemiBold"
                           Foreground="Gray"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="0" Command="{Binding ClearEntryCommand}"
                        Style="{StaticResource CharButtonStyle}" x:Name="CEButton">
                        <Label Content="CE" FontSize="14" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="1" Command="{Binding ClearCommand}"
                        Style="{StaticResource CharButtonStyle}">
                        <Label Content="C" FontSize="14" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="2" Command="{Binding RemoveCommand}"
                        Style="{StaticResource CharButtonStyle}">
                        <Grid>
                            <Label Content="←" FontSize="23" Foreground="Transparent" Margin="0,-3,0,0"/>
                            <Viewbox>
                                <Grid Margin="700,700,700,700">
                                    <Path Fill="Black" StrokeLineJoin="Bevel"
                                      Data="M198.608,246.104L382.664,62.04c5.068-5.056,7.856-11.816,7.856-19.024c0-7.212-2.788-13.968-7.856-19.032l-16.128-16.12
			                                C361.476,2.792,354.712,0,347.504,0s-13.964,2.792-19.028,7.864L109.328,227.008c-5.084,5.08-7.868,11.868-7.848,19.084
			                                c-0.02,7.248,2.76,14.028,7.848,19.112l218.944,218.932c5.064,5.072,11.82,7.864,19.032,7.864c7.208,0,13.964-2.792,19.032-7.864
			                                l16.124-16.12c10.492-10.492,10.492-27.572,0-38.06L198.608,246.104z"/>
                                </Grid>
                            </Viewbox>
                        </Grid>
                    </Button>
                    <Button Grid.Row="1" Grid.Column="3" Command="{Binding FunctionalClickCommand}"
                        Style="{StaticResource FunctionButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                        <TextBlock Text="÷" FontSize="24" Foreground="White"
                               FontWeight="Normal"/>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="0" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}" 
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="1" FontSize="17" FontWeight="SemiBold"
                       Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="1" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="2" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="2" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="3" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="2" Grid.Column="3" Command="{Binding FunctionalClickCommand}"
                        Style="{StaticResource FunctionButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                        <TextBlock Text="×" FontSize="24" Foreground="White"
                               FontWeight="Normal" Margin="0,-5,0,0"/>
                    </Button>
                    <Button Grid.Row="3" Grid.Column="0" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="4" FontSize="17" FontWeight="SemiBold"
                       Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="3" Grid.Column="1" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="5" FontSize="17" FontWeight="SemiBold"
                       Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="3" Grid.Column="2" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="6" FontSize="17" FontWeight="SemiBold"
                       Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="3" Grid.Column="3"  Command="{Binding FunctionalClickCommand}"
                        Style="{StaticResource FunctionButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                        <TextBlock Text="-" FontSize="24" Foreground="White"
                               FontWeight="SemiBold" Margin="0,-5,0,0"/>
                    </Button>
                    <Button Grid.Row="4" Grid.Column="0" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="7" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="4" Grid.Column="1" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="8" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="4" Grid.Column="2" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="9" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="4" Grid.Column="3" Command="{Binding FunctionalClickCommand}"
                        Style="{StaticResource FunctionButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                        <TextBlock Text="+" FontSize="24" Foreground="White"
                               FontWeight="Normal" Margin="0,-5,0,0"/>
                    </Button>
                    <Button Grid.Row="5" Grid.Column="0" Command="{Binding ChangeValueCommand}"
                        Style="{StaticResource CharButtonStyle}">
                        <Label Content="±" FontSize="17" Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="5" Grid.Column="1" Command="{Binding CharClickCommand}"
                        Style="{StaticResource DigitButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="0" FontSize="17" FontWeight="SemiBold"
                           Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="5" Grid.Column="2" Command="{Binding InsertCommaCommand}"
                        Style="{StaticResource CharButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Content}">
                        <Label Content="," FontSize="17" Foreground="Black"/>
                    </Button>
                    <Button Grid.Row="5" Grid.Column="3" Command="{Binding ResultCommand}"
                        Style="{StaticResource FunctionButtonStyle}"
                        CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=Content.Text}">
                        <TextBlock Text="=" FontSize="24" Foreground="White"
                               FontWeight="Normal" Margin="0,-5,0,0"/>
                    </Button>
                </Grid>
            </Grid>
            <Grid Grid.Column="1">
                <c:FullFitListBox x:Name="ResultsListBox" BorderThickness="0" ItemsSource="{Binding ResultsList}"
                                  Margin="2,0,8,4" Background="{Binding ElementName=MainPanel, Path=Background}"
                                  ScrollViewer.CanContentScroll="False" Height="252"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <c:FullFitListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"
                                               MaxWidth="164" MaxHeight="100" Text="{Binding Value}" Grid.Row="0" Margin="0,0,0,3"
                                               HorizontalAlignment="Right" Foreground="Gray" TextAlignment="Right"/>
                                    <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" FontWeight="SemiBold"
                                               MaxWidth="164" Text="{Binding Key}" Grid.Row="1" HorizontalAlignment="Right"
                                               FontSize="16.5" Foreground="Black" TextAlignment="Right"/>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </c:FullFitListBox.ItemTemplate>
                    <c:FullFitListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </c:FullFitListBox.ItemsPanel>
                    <c:FullFitListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBox}, Path=Background}"/>
                            <Setter Property="FontSize" Value="13"/>
                            <Setter Property="Foreground" Value="Gray"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Grid Background="{TemplateBinding Background}" HorizontalAlignment="Right"
                                              Margin="0,0,0,28" VerticalAlignment="Stretch">
                                            <ContentPresenter VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </c:FullFitListBox.ItemContainerStyle>
                </c:FullFitListBox>
            </Grid>
        </Grid>
    </Grid>
</Window>
